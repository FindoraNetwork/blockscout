
name: develop
on:
  pull_request:
    branches:
      - develop
jobs:
  build-image:
    strategy:
      matrix:
        platform: [aws]
    runs-on: ${{matrix.platform}}
    env:
      PUBLIC_ECR_URL: public.ecr.aws/k6m5b6e2
      ENV: dev
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: Build blockscout images
      env:
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
        ENV: ${{ env.ENV }}
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      shell: bash
      run: |
        COMMIT_HASH=$(echo ${GITHUB_CONTEXT} | jq '.event.pull_request.head.sha')
        if [ "${COMMIT_HASH}" == "null" ]; then
          export COMMIT_HASH="${GITHUB_SHA}"
        else
          export COMMIT_HASH=${COMMIT_HASH}
        fi
        export BRANCH="${GITHUB_HEAD_REF}"
        export TOBRANCH="${GITHUB_BASE_REF}"
        export IMAGE_TAG="${TOBRANCH}-${COMMIT_HASH}"
        echo "Image tag: ${IMAGE_TAG}"
        make ci_build_image
    - name: Login ECR
      env:
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
      shell: bash
      run: |
        # $(aws ecr get-login --region us-west-2 --no-include-email)
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${PUBLIC_ECR_URL}

    - name: Push images
      id: push_image
      env:
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
        ENV: ${{ env.ENV }}
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      shell: bash
      run: |
        COMMIT_HASH=$(echo ${GITHUB_CONTEXT} | jq '.event.pull_request.head.sha')
        if [ "${COMMIT_HASH}" == "null" ]; then
          export COMMIT_HASH="${GITHUB_SHA}"
        else
          export COMMIT_HASH=${COMMIT_HASH}
        fi
        export BRANCH="${GITHUB_HEAD_REF}"
        export TOBRANCH="${GITHUB_BASE_REF}"
        export IMAGE_TAG="${TOBRANCH}-${COMMIT_HASH}"
        echo "Image tag: ${IMAGE_TAG}"
        echo "::set-output name=image_url::${{ env.PUBLIC_ECR_URL }}/${{ env.ENV}}/${IMAGE_TAG}"
        make ci_push_image

    - name: Clean blockscout images
      env:
        PUBLIC_ECR_URL: ${{ env.PUBLIC_ECR_URL }}
        ENV: ${{ env.ENV }}
        GITHUB_CONTEXT: ${{ toJSON(github) }}
      shell: bash
      run: |
        COMMIT_HASH=$(echo ${GITHUB_CONTEXT} | jq '.event.pull_request.head.sha')
        if [ "${COMMIT_HASH}" == "null" ]; then
          export COMMIT_HASH="${GITHUB_SHA}"
        else
          export COMMIT_HASH=${COMMIT_HASH}
        fi
        export BRANCH="${GITHUB_HEAD_REF}"
        export TOBRANCH="${GITHUB_BASE_REF}"
        export IMAGE_TAG="${TOBRANCH}-${COMMIT_HASH}"
        echo "Image tag: ${IMAGE_TAG}"
        make clean_image

  deploy:
    strategy:
      matrix:
        platform: [aws]
    runs-on: ${{ matrix.platform }}
    needs: [build-image]
    steps:
      - name: update the blockscout image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.MAINNET_HOST }}
          username: ubuntu
          key: ${{ secrets.MAINNET_KEY }}
          port: 22
          script: |
            docker stop blockscout
            dokcer rm blockscout
            docker run -d -t\
              -p 4000:4000 \
              -e DATABASE_URL=postgresql://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@${{ secrets.QA02_RDS }}/explorer?ssl=false \
              -e ETHEREUM_JSONRPC_VARIANT=ganache \
              -e ETHEREUM_JSONRPC_HTTP_URL=https://${{ secrets.QA02_ENDPOINT }} \
              -e COIN=FRA \
              -e MIX_ENV=prod \
              --restart always \
              --name blockscout \
              ${{ needs.build-image.outputs.image_url }}